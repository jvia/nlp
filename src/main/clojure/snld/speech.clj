;;; Assignment 1
;; Write a speech recognizer that can recognize simple words.  Feel
;; free to be as creative as you would like to be in devising the
;; recognizer (there are no requirements for a particular algorithm).
;; You are allowed to use whatever supporting software you'd like to
;; use short of using an existing speech recognizer (e.g., here is FFT
;; software in C that reads an audio stream from the mic).  Test your
;; recognizer on the three color words: "red", "green", and "white".
;; You might want to record your own words as well.  Finally, think of
;; ways of biasing your recognizers so that it is better at
;; distinguishing words with a bias than words without (e.g., you
;; could bias it towards "on" so that it will recognize "on" more
;; likely compared to "one").



;; http://cmusphinx.sourceforge.net/wiki/tutorialsphinx4
;; 
;; Recreate in clojure & then replace the HMM
;;

;; Papers on HMM for computing a statistical representation of an
;; acoustic signal
;; - Baum, 1972
;; - Baker, 1975
;; - Jelinek, 1976

;; Good info:
;; - https://en.wikipedia.org/wiki/Speech_recognition#Hidden_Markov_models
;; - http://cs.brown.edu/research/ai/dynamics/tutorial/Documents/HiddenMarkovModels.html
;; - http://www.cslu.ogi.edu/people/hosom/cs552/

;; TODO: Figure out an HMM implementation (falling back on NN if necessary)
(ns ^{:doc "Convert acoustic signals to text."
      :author "Jeremiah Via"}
  snld.speech
  (:use [snld sphinx]
        [incanter core stats charts])
  (:import [java.io File FileInputStream InputStream BufferedInputStream]))

;;; Some vars to hold the files
(def red2 "src/main/resources/red2.wav")
(def on3 "src/main/resources/on3.wav")
(def green2 "src/main/resources/green2.wav")
(def one1 "src/main/resources/one1.wav")
(def white1 "src/main/resources/white2.wav")

(defn make-pipline
  "Makes a pipline using the default values. (Good for running in batch
  mode.)"
  []
  (frontend
   (data-blocker :block-size 10)
   (preemphasizer :preemphasis-factor 0.97)
   (raised-cosine-windower :window-size 25.625 :window-shift 10.0 :alpha 0.46)
   (discrete-fourier-transform :fft-points -1  :invert false)
   (mel-frequency-filter-bank  :num-filters 40 :min-freq 130.0 :max-freq 6800.0)
   (discrete-cosine-transform  :num-filters 40 :cepstrum-len 13)
   (batch-cmn)
   (deltas-feature-extractor :window-size 3)))

(defn prep-data
  "Tranforms data from the DeltaFeatureExtractor into a map."
  [d]
  (assert (zero? (mod (count (.getValues d)) 3))
          "Extracted features must be a multiple of 3.")
  (let [features (partition 13 (.getValues d))]
    {:timestamp (.getCollectTime d)
     :sample-rate (.getSampleRate d)
     :features {:cepstrum (nth features 0)
                :delta    (nth features 1)
                :ddelta   (nth features 2)}}))

(defn extract-features
  "Pulls the features out of a DeltasFeaturesExtractor."
  [frontend source]
  (add-data-source frontend source)
  (loop [val (data frontend) 
         accm nil]
    (cond (start? val) (recur (data frontend) nil)
          (end? val) accm
          :else (recur (data frontend)
                       (conj accm (prep-data val))))))

(defn audio-file-feature-extractor
  "Given a path to an audio file, extract all features from it for use
  in model building."
  [path]
  (let [frontend (make-pipline)
        audio (audio-file-data-source :file path)]
    (extract-features frontend audio)))

(def ef
  {:timestamp 1361569455108, :sample-rate 16000,
   :features
   {:cepstrum '(-0.6350142 0.93213284 0.0996516 -0.5628229 -0.009311179 0.47833294 -0.18784887 -0.2874116 -0.3183234 -0.3713474 -0.10051748 0.1914295 0.12308788),
    :delta '(5.394108 -0.192472 -0.7899849 0.1037459 -1.9239167E-4 -0.038117655 -0.506319 -0.286837 0.12566972 0.16874354 0.0024353901 0.49930543 -0.07753961),
    :ddelta '(-0.4581273 -0.49824384 0.17722619 0.09057022 0.16333143 -0.50345284 -0.065142944 0.4884249 0.26812062 0.20054768 0.13845621 -0.1357249 -0.28731254)}})


;; Debug helpers
(defn where-am-i? []  (.getCanonicalPath (File. ".")))
(defn available-methods [object]
  (let [class (.getClass object)]
    (for [method (.getDeclaredMethods class)]
      (.toGenericString method))))


;; dict
(def dict
  {:red    [:r  :eh :d]
   :green  [:g  :r  :iy :n]
   :white  [:w  :ay :t]
   :white2 [:hh :w  :ay :t]})



;; Log math
(defn log-add [a b])
(defn log-mul [a b & some]
  (if (not (nil? some))
    (+ a b (reduce + some))
    (+ a b)))

;; Need a HMM with a Bakis topology (defined by state transition
;; matrix)

;;; Notes
;; - common to use an HMM per phoneme with three states
;;
;; - then phoneme-level HMMs are conected to form word-level HMMs
;;
;; - VQ can be used to construct discrete HMM  observation probs
;;          b_j(m) = # vectors in cluster m and state j / # vectors in state j
;;
;; - all states must have the same number of codewords (each state has own data and VQ)
;;
;; - should make all zero probs non-zero so there is a smooth
;;   continous probability for p(x) GAUSSIAN MIXTURE MODELS!
;;
;; - GMM is charcaterized by the number of component gaussians, the
;;   mean & stddev for each component, and the weight (height) of each
;;   component.
;;
;; - for VQ, can use euclidean distance to determine distance between two feature vectors
;; - GMM will be a set of pdf-normals.
(defn gmm
  "Calculate the probability of x given a Gaussian mixture model"
  ;; TODO: make multidimensional
  [x mm]
  (letfn [(component [{weight :weight mean :mean sd :sd}]
            (* weight (pdf-normal x mean sd)))]
    (reduce + (map component mm))))

(def mixture [{:weight 0.5 :mean 2 :sd 0.5}
              {:weight 0.5 :mean 4 :sd 1}])

;; will need a hmm for each word (> 3 per word)

;; will need an hmm for each phoneme (with 3 states, not including null states)


(defn gaussian
  "Calcuate the probability of an observation given the parameters of
   a multi-variate Gaussian. "
  [obs mean cov]
  ;; TODO: compare with version from notes and see if equivalent
  (let [n (length obs)
        norm (minus obs mean)]
    (exp (mult -1/2 (mmult (trans norm) (solve cov) norm)))))


(defn gaussian-mixture
  "Calculate the probability of a given observation using a Gaussian mixture model."
  [obs gmm]
  (letfn [(component [{weight :weight mean :mean cov :sd}]
            ;; no point in calculating
            (if (zero? weight) 0
                (* weight (gaussian obs mean cov))))]
    (reduce + (map component gmm))))

(defn key->num [key]
  (Integer/valueOf (subs (str key) 1)))

(defn num->key [num]
  (keyword (str num)))

(defn max-cur
  "Given a Viterbi table and a timestamp, find the most likely state."
  [db t]
  (let [key (num->key t) entry (get db key)]
    (loop [states (keys entry) best-state -1 best-prob -1]
      (if (empty? states)
        (conj {:best best-state} (get (get db key) best-state))
        (let [cur-state (first states) cur-prob  (:prob (get entry cur-state))]
          (if (> cur-prob best-prob)
            (recur (rest states) cur-state cur-prob)
            (recur (rest states) best-state best-prob)))))))


(defn max-prev
  "Given a Viterbi table and a timestamp, find the best previous state."
  [db t]
  (let [best-cur (:best (max-cur db t))]
    (:prev (get (get db (num->key t)) best-cur))))

(defn max-time [db]
  (apply max (map key->num (keys db))))

(defn most-likely-path 
  "Given a Viterbi table, backtrack through the table to recover the
   most likely path."
  [db]
  (let [final-t (max-time db)
        {end :best endp :prob} (max-cur db final-t)]
    (loop [t final-t path
           (list (key->num end))]
      (if (zero? t) {:path path :prob endp}
          (recur (dec t) (cons (max-prev db t) path))))))

(defn transition-prob [hmm prev cur]
  (.get (:trans hmm) prev cur))

(defn emitting-prob [obs hmm gmm state]
  (gaussian-mixture obs (get (:mixture hmm) state)))

(defn maximum-prob
  "Given a state, a previous sets of states, an observation and the
   hidden markov model, determine the best transtion to this state and
   its probability."
  [state obs prev-states hmm]
  (let [emit (emitting-prob obs hmm gmm state)]
    (letfn [(calc-prob [prob prev]
              (let [trans (transition-prob hmm prev state)]
                (bigdec (* prob trans emit))))]
      (let [candidates
            (into {} (map (fn [st] {(key st) (calc-prob (:prob (val st))
                                                       (key->num (key st)))})
                          prev-states))
            best (reduce #(if (> (val %1) (val %2)) %1 %2)
                         ;; update all probs of going into this state
                         candidates)]
        {:prev (first best) :prob (second best)}))))

(defn update-table
  "Update the Viteri table using the given observation and hidden
   markov model."
  [db obs hmm]
  (let [cur-t  (max-time db)
        next-t (inc cur-t)
        prev-states (get db (num->key cur-t))
        states (range (:num_states hmm))
        keys (map num->key states)
        vals (map #(maximum-prob % obs prev-states hmm) states)]
    (assoc db (num->key next-t) (zipmap keys vals))))

(defn create-table
  "Create the base "
  [hmm]
  (let [states (range (:num_states hmm))]
    {(num->key 0)
     (zipmap (map num->key states)
             (repeatedly (fn [] {:prev nil :prob 1})))}))

(defn viterbi
  "Given a set of observations and a hiddern markov model, find the
   Viterbi path through the hidden markov model which best explains
   the observation sequence."
  [observations hmm]
  (loop [observations observations
         hmm hmm
         db (create-table hmm)]
    (if (empty? observations) db #_(most-likely-path db)
        (let [obs  (first observations)
              next (rest observations)]
          (recur next hmm (update-table db obs hmm))))))

(defn initialize [observation hmm table]
  (let [states (range (:states hmm))]
    (for [state states]
      {(num->key state) (get (:init-prob hmm) state)})))

(defn update [observation hmm table])

(defn viterbi-step
  "Performs one step of the viterbi algorithm so that it can be used
  incremenetally. If table is nil, a table is initialized based off
  this observation."
  [observation hmm table]
  (if (nil? table)
    (update observation hmm (initialize observation hmm table))
    (update observation hmm table)))

(defn extract-solution
  "Extract the viterbi path from the table and return it with its
  probability."
  [table]
  (let [final-t (max-time table)
        {best :best prev :prev-best prob :prob} (max-cur table final-t)]
    (loop [t (dec final-t) cur prev path (list best)]
      (if (nil? cur) {:path path :prob prob}
          (let [entry (get (get table (num->key t)) cur)]
            (recur (dec t) (:prev-best entry) (cons cur path)))))))


(def ex-table
  {:0 {:1 {:prev-best nil :prob 0.2}
       :2 {:prev-best nil :prob 0.3}
       :3 {:prev-best nil :prob 0.1}
       :4 {:prev-best nil :prob 0.1}
       :5 {:prev-best nil :prob 0.3}}
   :1 {:1 {:prev-best :3  :prob 0.3}
       :2 {:prev-best :1  :prob 0.2}
       :3 {:prev-best :2  :prob 0.1}
       :4 {:prev-best :5  :prob 0.3}
       :5 {:prev-best :3  :prob 0.4}}
   :2 {:1 {:prev-best :3  :prob 0.02}
       :2 {:prev-best :3  :prob 0.01}
       :3 {:prev-best :1  :prob 0.02}
       :4 {:prev-best :2  :prob 0.05}
       :5 {:prev-best :4  :prob 0.04}}})

(def ex-tableio
  {0 {1 {:prev-best nil :prob 0.2}
      2 {:prev-best nil :prob 0.3}
      3 {:prev-best nil :prob 0.1}
      4 {:prev-best nil :prob 0.1}
      5 {:prev-best nil :prob 0.3}}
   1 {1 {:prev-best 3  :prob 0.3}
      2 {:prev-best 1  :prob 0.2}
      3 {:prev-best 2  :prob 0.1}
      4 {:prev-best 5  :prob 0.3}
      5 {:prev-best 3  :prob 0.4}}
   2 {1 {:prev-best 3  :prob 0.02}
      2 {:prev-best 3  :prob 0.01}
      3 {:prev-best 1  :prob 0.02}
      4 {:prev-best 2  :prob 0.05}
      5 {:prev-best 4  :prob 0.04}}})





(defn gauss-pdf
  "Calcuate the probability of an observation given the parameters of a
   multi-variate Gaussian."
  [obs mean cov]
  (let [n (length obs)
        norm (minus obs mean)]
    (exp (mult -1/2 (mmult (trans norm) (solve cov) norm)))))



(defprotocol Density
  (density [mixture obs] "Probability density of an observation given a mixture model."))

(defrecord GaussMixture [weight mean covariance]
  Density
  (density [mixture obs]
    (gauss-pdf obs (:mean mixture) (:covariance mixture))))


(def observations
  [[-2.00 -0.56 -0.12 -0.23 -0.39  0.22  0.54 -0.14  0.02  0.02  0.05  0.26  0.06 -0.18]
   [-2.33 -0.46 -0.03 -0.02  0.09  0.08 -0.20 -0.10 -0.01 -0.03 -0.05  0.19 -0.02 -0.24]
   [-2.54 -0.50 -0.05 -0.08  0.67  0.60 -0.00 -0.09 -0.02 -0.04 -0.06  0.06 -0.14 -0.23]
   [-2.29 -0.64 -0.32 -0.57  0.04 -0.06 -0.37 -0.04 -0.06 -0.05 -0.03 -0.10 -0.16 -0.07]
   [-2.51 -0.58 -0.16 -0.27 -0.08 -0.41 -0.53  0.02 -0.02 -0.01  0.07 -0.08 -0.09 -0.02]])

(def transitions
  (matrix
   '((0.94 0.05 0.0  0.0  0.0)
     (0.0  0.92 0.07 0.0  0.0)
     (0.0  0.0  0.93 0.06 0.0)
     (0.0  0.0  0.0  0.87 0.13)
     (0.0  0.0  0.0  0.0  0.95))))

;; Each element in the vector is the mixture of a 
(def mixture
  [(GaussMixture. 1.0
                  [-2.53457 -0.52503 -0.03429 -0.13210 0.01341 -0.05493 -0.18780 -0.04576 -0.01952 -0.00593 -0.01056 0.01584 0.01032 0.01530]
                  (diag [0.16152 0.04408 0.04349 0.05813 0.11706 0.08391 0.13401 0.00804 0.00281 0.00597 0.00876 0.01370 0.01054 0.01414]))
   (GaussMixture. 1.0
                  [0.81322 0.39103 0.16393 0.61980 0.40126 -0.05607 -0.14594 0.58560 0.09958 -0.03508 0.02324 0.00184 -0.03203 0.02947]
                  (diag [7.67641 0.38931 0.30903 0.38134 0.35050 0.14392 0.11679 0.22702 0.02651 0.04004 0.04765 0.04619 0.01666 0.01500]))
   (GaussMixture. 1.0
                  [5.25131 1.07706 -0.43141 -0.59588 -0.28788 -0.14505 0.60569 -0.13300 0.02562 0.05991 -0.04623 -0.05389 0.00647 0.04008]
                  (diag [0.57589 0.01593 0.17815 0.05941 0.12991 0.11279 0.12714 0.05008 0.00162 0.00907 0.01053 0.00522 0.00684 0.01050]))
   (GaussMixture. 1.0
                  [0.98755 0.54840 0.46072 0.02585 -0.20168 -0.03173 0.43830 -0.56677 -0.19778 0.00703 0.14499 0.15456 0.09357 -0.11081]
                  (diag [2.29717 0.35795 0.04368 0.26011 0.44733 0.29240 0.26898 0.05886 0.00874 0.00749 0.00990 0.02648 0.02438 0.02656]))
   (GaussMixture. 1.0
                  [-2.03884 -0.64122 0.06727 0.13439 0.05994 0.21659 -0.27696 -0.07143 -0.01426 -0.02588 -0.03053 -0.01634 -0.00490 -0.00279]
                  (diag [0.25059 0.03916 0.07630 0.11588 0.11216 0.10312 0.09185 0.01214 0.00509 0.00320 0.00881 0.00845 0.01059 0.00901]))])

(def initial [1.0 0.0 0.0 0.0 0.0])

(defrecord HMM [output states trans-prob emit-prob init-prob])
(def nohmm (HMM. "no" 5 transitions mixture initial))

































;; (defn infinity? [x]
;;   (or (= x Double/POSITIVE_INFINITY)
;;       (= x Double/NEGATIVE_INFINITY)))

;; (defn unlog-matrix [matrix]
;;   (matrix-map
;;    (fn [x]
;;      (let [v (pow Math/E x)]
;;        (if (infinity? v) 0.0M (bigdec v))))
;;    matrix))

;; (def input1
;;   [[-2.0056 -0.5617 -0.1262 -0.2387 -0.3990 0.2257 0.5405 -0.1414 0.0202 0.0240 0.0511 0.2644 0.0624 -0.1833]
;;    [-2.3322 -0.4646 -0.0372 -0.0283 0.0949 0.0824 -0.2091 -0.1130 -0.0097 -0.0318 -0.0512 0.1962 -0.0203 -0.2374]
;;    [-2.5494 -0.5093 -0.0507 -0.0882 0.6763 0.6096 -0.0011 -0.0980 -0.0208 -0.0356 -0.0619 0.0578 -0.1435 -0.2317]
;;    [-2.2989 -0.6366 -0.3229 -0.5701 0.0443 -0.0677 -0.3757 -0.0445 -0.0627 -0.0542 -0.0311 -0.1095 -0.1620 -0.0746]
;;    [-2.5120 -0.5796 -0.1612 -0.2776 -0.0847 -0.4169 -0.5346 0.0209 -0.0222 -0.0106 0.0763 -0.0853 -0.0983 -0.0299]
;;    [-2.5732 -0.7430 -0.2529 -0.0894 -0.0722 -0.2145 -0.3156 0.0167 0.0151 0.0037 0.0843 0.0145 0.0965 0.0217]
;;    [-2.3076 -0.5670 -0.1389 0.0530 0.3082 0.1916 -0.1805 0.0529 0.0276 -0.0294 -0.0341 0.0673 0.1407 -0.0088]
;;    [-2.3175 -0.5673 -0.3155 -0.3140 -0.0796 0.1106 -0.4441 -0.0026 0.0378 0.0257 -0.1276 0.0049 -0.0148 -0.0538]
;;    [-2.3752 -0.5297 -0.2767 -0.3358 0.2555 0.1239 -0.5141 -0.0145 0.0132 0.0036 -0.0819 -0.0120 -0.0731 -0.0056]
;;    [-2.5521 -0.5727 -0.0554 -0.5332 -0.0212 -0.2547 -0.4178 0.0118 -0.0121 0.0060 -0.0216 0.0714 -0.0383 0.0842]
;;    [-2.2627 -0.4984 -0.2508 -0.2469 0.2189 0.0089 -0.2217 0.2280 -0.1537 -0.1642 0.3321 -0.1749 0.0046 0.2412]
;;    [-2.3149 -0.6432 -0.2982 -0.4664 0.2957 -0.0232 -0.1695 0.0937 -0.1421 -0.1762 0.2632 -0.1056 -0.0454 0.0902]
;;    [-1.3539 -1.2627 -0.9761 1.2911 -0.7772 0.0311 0.5676 -0.0401 -0.0627 -0.0164 0.0907 -0.0122 0.0676 0.0949]
;;    [-2.5382 -0.9008 -0.5739 0.0137 -0.0514 -0.4929 -0.3614 -0.0792 0.0620 0.1645 0.0020 0.1214 0.0985 -0.0937]
;;    [-2.3517 -0.6829 -0.1949 -0.0336 0.3314 0.5816 0.3489 -0.1400 0.1925 0.2384 -0.3109 0.2379 0.1530 -0.2008]
;;    [-2.2122 -0.6231 0.1336 0.2059 0.3486 0.1942 -0.5285 0.1100 0.0993 0.1070 -0.0202 0.0900 0.1532 0.0084]
;;    [-2.2168 -0.4391 -0.1377 -0.3594 0.2124 0.4526 -0.3527 0.1419 0.1498 0.1538 0.1826 0.0970 -0.0055 -0.0100]
;;    [-2.0557 -0.5264 -0.0673 0.0759 0.4581 0.3375 0.0313 0.4111 0.2763 0.1957 0.2243 0.1744 0.0254 0.0821]
;;    [-1.7207 0.0175 0.6745 0.9442 0.7617 0.4824 0.0189 0.5842 0.2735 0.1776 0.3886 0.2631 -0.0880 -0.0785]
;;    [-0.4047 0.5300 0.7059 0.6758 0.9460 0.3061 -0.3039 0.5863 0.2172 0.0292 0.2927 0.2344 -0.0875 -0.1956]
;;    [-0.1212 0.4004 0.3637 1.2837 1.2839 0.0284 -0.5777 0.3910 0.0848 -0.0680 0.1249 0.1043 -0.1287 -0.1414]
;;    [0.0760 0.3679 0.2340 1.3694 1.3691 0.1271 -0.6483 0.2254 0.0214 -0.0501 0.0143 0.0202 -0.0145 -0.0716]
;;    [-0.0062 0.5227 0.5704 1.2220 1.0716 -0.0715 -0.5158 0.1640 0.0636 0.0030 -0.1147 -0.0347 0.0785 -0.0242]
;;    [0.6647 0.5760 0.3519 0.7783 1.1531 0.2833 -0.6929 0.3498 0.0538 -0.1140 0.0123 -0.1536 -0.0764 0.0379]
;;    [0.4044 0.6145 0.3198 1.0056 1.2183 0.3429 -0.6763 1.0408 -0.0185 -0.3097 -0.0180 -0.2525 -0.1858 0.0216]
;;    [1.6197 0.5912 -0.2108 1.5390 0.5279 -0.4622 -0.3785 1.2746 -0.0037 -0.2893 -0.1146 -0.2471 -0.3329 0.1522]
;;    [4.7204 0.4226 -0.6966 0.7519 0.1217 -0.6277 -0.5650 1.2727 -0.0127 -0.1576 -0.3460 -0.1066 -0.2990 0.1211]
;;    [4.8798 0.6531 -0.5866 0.3323 0.4658 -0.8959 0.0123 0.7780 0.0140 -0.0485 -0.3693 0.0455 -0.0922 0.0432]
;;    [5.1378 0.5201 -0.2803 -0.1209 0.7165 -0.9352 -0.2664 0.1531 0.0301 0.0019 -0.1325 0.0220 -0.0336 0.1587]
;;    [5.3010 0.6125 -0.6614 0.1291 0.4581 -0.7697 -0.3118 0.0994 -0.0082 -0.0490 0.0332 -0.1549 0.0287 0.1549]
;;    [5.2755 0.5934 -0.6498 0.1909 0.2353 -0.8588 0.3907 0.0357 0.0245 -0.0785 0.0417 -0.1782 0.0689 0.2580]
;;    [5.3081 0.5753 -0.6468 0.3424 -0.0683 -0.7907 0.4584 -0.0023 0.0301 0.0131 -0.0973 -0.1345 0.1311 0.2115]
;;    [5.3130 0.6613 -0.6801 -0.0191 0.0890 -0.5802 0.6387 0.0167 0.0360 0.0381 -0.1341 -0.1502 0.1270 0.1541]
;;    [5.2708 0.7292 -0.5806 -0.2526 -0.1413 -0.2536 0.6220 -0.0669 0.0638 0.0866 -0.1751 -0.1427 0.0940 0.1856]
;;    [5.3779 0.6964 -0.4924 -0.1823 -0.4793 -0.4921 1.0795 -0.1081 0.0881 0.0262 -0.0188 -0.2638 0.0101 0.1882]
;;    [4.9412 0.8770 -0.3078 -0.4514 -0.4975 -0.3649 1.1661 -0.1324 0.0840 0.0259 -0.0276 -0.1993 -0.0371 0.1076]
;;    [4.9372 1.0279 -0.6857 -0.0137 -1.0521 -0.4738 1.3078 -0.1402 0.0810 0.0596 -0.1134 -0.1580 0.0986 -0.0107]
;;    [4.8291 0.9836 -0.3546 -0.4751 -0.8514 -0.4484 1.0460 -0.1229 0.0546 0.0715 -0.1356 -0.0868 0.1016 -0.0845]
;;    [4.7329 1.0483 -0.1709 -0.7375 -1.0924 0.0426 1.0858 -0.1592 0.0490 0.0800 -0.1138 -0.0236 0.0446 -0.0141]
;;    [4.4290 1.1396 -0.2077 -0.7673 -0.9115 -0.1149 0.8544 -0.2243 0.0946 0.0233 0.0032 -0.0350 -0.0481 -0.0629]
;;    [4.3415 1.1951 -0.3591 -0.4365 -1.1399 -0.4177 1.3334 -0.2178 0.0449 0.0293 0.0336 0.0599 -0.1435 -0.1111]
;;    [3.9034 1.3830 -0.1440 -0.6098 -1.0025 -0.4589 0.6076 -0.2006 -0.0588 0.0547 0.0877 0.0520 -0.0497 -0.1253]
;;    [3.9068 1.1511 -0.0563 -0.6484 -0.7476 -0.5031 0.6537 -0.2554 -0.1606 0.1356 0.1369 0.0673 0.0600 -0.1303]
;;    [3.6432 0.8675 -0.0854 -0.2226 -0.8479 -0.3207 0.5677 -0.3074 -0.1637 0.1640 0.1484 -0.0144 0.0314 0.0634]
;;    [3.1944 0.6500 0.2896 0.0544 -0.8806 -0.1867 0.7019 -0.3302 -0.0790 0.1915 0.0693 -0.1370 0.0127 0.0235]
;;    [2.7226 0.8151 0.5031 -0.2193 -1.0082 -0.4599 0.9004 -0.1991 0.0273 0.1523 -0.0777 -0.2036 0.0058 -0.0298]
;;    [2.7160 0.7825 0.6070 -0.3035 -1.3524 -0.3701 0.6046 -0.1613 0.0546 0.0487 -0.1866 -0.1182 0.0651 -0.0805]
;;    [2.8867 0.9378 0.5173 -0.4322 -1.6298 -0.2001 0.4672 -0.2106 -0.0613 -0.0045 -0.0463 0.1584 0.0706 -0.1011]
;;    [2.3059 0.8615 0.5261 -0.7722 -1.1610 0.0090 0.5163 -0.4268 -0.0806 0.0599 0.0833 0.2682 0.0269 0.0244]
;;    [1.8745 0.4690 0.5210 -0.2163 -0.3121 -0.2966 0.4391 -0.5105 -0.0681 0.0580 0.0794 0.3042 -0.1274 0.0926]
;;    [1.0880 0.6142 0.9045 0.0052 -0.6701 -0.1873 0.7408 -0.4805 0.0236 0.0535 0.0979 0.1122 -0.1611 -0.0603]
;;    [0.9429 0.7210 0.6181 -0.4238 -0.3542 -0.7390 0.8179 -0.5859 0.0690 0.0704 0.0304 0.0907 0.0332 -0.1672]
;;    [0.3693 0.8535 0.7448 -0.1790 -0.5792 -0.5756 0.0255 -0.4725 -0.0990 -0.0888 0.1100 0.2845 0.1607 -0.1827]
;;    [-0.6955 0.6945 0.9526 0.0280 0.0959 0.0635 -0.0393 -0.5339 -0.1787 -0.0509 0.1914 0.2517 0.2663 -0.1016]
;;    [-0.4554 0.1326 0.2932 0.3291 0.5272 0.2149 0.2557 -0.4088 -0.1974 -0.0724 0.1723 0.2720 0.2115 0.0915]
;;    [-1.3140 0.1881 0.5895 0.2793 0.3510 0.1971 0.1947 -0.3187 -0.1684 -0.1062 0.1035 0.1256 0.0440 -0.0785]
;;    [-1.3655 0.1196 0.5644 0.5570 0.6530 0.4152 0.3657 -0.3340 -0.1002 -0.0522 0.0764 0.1151 0.0631 -0.1408]
;;    [-1.8342 -0.1412 0.2862 0.4314 0.6609 0.1832 -0.4871 -0.1586 -0.1332 -0.1250 0.0295 0.0489 0.0668 -0.1699]
;;    [-1.8652 -0.2040 0.1838 0.6352 0.9480 0.5376 -0.1075 -0.1099 -0.0928 -0.0801 -0.1384 -0.1008 0.0889 -0.1500]
;;    [-1.8574 -0.3163 0.1547 0.3878 0.4480 0.4698 -0.4180 -0.1016 -0.0747 0.0059 -0.1805 -0.1541 0.0787 -0.0219]
;;    [-1.9033 -0.2566 0.2298 -0.1133 0.2557 0.7164 -0.4189 -0.1549 -0.0917 -0.0420 -0.2498 -0.2108 -0.0135 0.0367]
;;    [-2.3233 -0.4885 0.2928 -0.0970 0.2366 0.4872 -0.4411 -0.1348 -0.1334 -0.1199 -0.1766 -0.0805 -0.1002 0.0374]
;;    [-2.4067 -0.5763 -0.0952 -0.3713 -0.0003 0.4614 0.0876 -0.0145 -0.0828 -0.1056 -0.0238 -0.0102 -0.0936 -0.0219]
;;    [-2.2796 -0.8235 -0.2823 -0.3660 0.1733 0.0964 -0.4841 0.1431 0.0030 -0.0383 0.0059 0.0248 0.0098 -0.0624]
;;    [-1.9977 -0.5029 -0.0108 -0.0980 0.2364 0.4436 -0.5070 0.1166 0.0072 0.0315 0.0881 0.0311 0.0179 -0.0837]
;;    [-1.8124 -0.5101 0.0590 -0.2041 0.2424 0.5452 -0.4556 0.0053 0.0311 0.1599 0.2263 0.0112 -0.0804 -0.0422]
;;    [-2.0572 -0.6968 -0.1084 -0.0115 0.1206 0.3263 -0.3449 -0.0700 -0.0377 0.0178 0.0810 -0.0404 -0.1740 -0.0460]
;;    [-2.2235 -0.5711 0.5661 0.7222 0.2873 -0.2469 -0.7764 -0.0942 -0.0321 -0.0131 0.0079 -0.0322 -0.0605 0.0228]
;;    [-2.1424 -0.6610 -0.1752 -0.1560 0.0121 -0.0302 -0.5767 0.0324 0.0576 0.0625 -0.0474 -0.0730 0.0696 0.1150]
;;    [-2.2411 -0.6887 0.0269 -0.0923 0.1358 0.4208 -0.2254 0.0634 0.0017 0.0043 -0.0930 -0.1216 0.1771 0.1985]
;;    [-1.8867 -0.3499 0.4739 0.1586 -0.1688 0.3406 -0.0454 0.0278 0.0396 0.1016 0.0330 -0.0215 0.0941 0.0302]
;;    [-2.0345 -0.7182 0.2631 0.0996 -0.2304 0.4530 -0.0497 0.0038 0.0099 -0.0215 -0.0358 0.0355 -0.0042 -0.0050]
;;    [-2.1064 -0.4481 0.2147 -0.0868 0.0876 0.4243 -0.5136 -0.1131 -0.0554 -0.1610 -0.1352 0.0235 -0.0417 -0.0505]
;;    [-2.1121 -0.5900 0.0492 -0.1487 0.1854 0.3578 -0.0166 -0.0446 -0.0098 -0.0996 -0.0353 0.0805 -0.0015 -0.0443]
;;    [-2.4135 -0.6910 -0.2242 -0.3933 -0.2590 0.1796 -0.3147 -0.0140 -0.0294 -0.0409 0.0469 0.0929 0.0525 0.0373]
;;    [-2.1038 -0.6460 -0.0157 0.0763 0.3456 0.5677 -0.3706 0.0218 0.0537 0.1119 0.0882 0.1419 0.0610 -0.1257]
;;    [-2.1805 -0.5672 0.0428 0.0352 0.4719 0.5816 -0.1502 0.0264 0.0640 0.1501 0.0542 0.0984 0.0159 -0.0017]
;;    [-2.1195 -0.3834 0.4755 0.0779 0.5292 0.4621 -0.7271 -0.0243 -0.0411 -0.0533 -0.0990 -0.1218 -0.0704 0.0451]
;;    [-2.2736 -0.5022 0.2807 -0.1231 0.1410 0.3122 -0.1452 -0.0623 -0.0586 -0.1599 -0.1830 -0.2552 -0.0637 -0.0346]
;;    [-2.1790 -0.8839 -0.4013 -0.3394 -0.0979 0.3506 -0.1477 -0.0256 -0.0410 -0.2347 -0.1059 -0.1878 -0.0487 0.0576]
;;    [-2.4621 -0.6102 -0.3185 -0.6709 -0.4904 0.3190 -0.6130 0.0163 -0.0023 -0.0937 -0.0787 -0.0482 -0.0731 -0.1013]
;;    [-2.1534 -0.5344 -0.3985 -0.1775 -0.0942 0.2152 -0.2050 -0.0280 0.0188 0.0658 0.0204 -0.0977 -0.1462 -0.0246]
;;    [-2.2050 -0.6886 -0.1892 -0.5978 -0.1018 0.0142 -0.6230 0.0072 0.0029 0.0630 -0.0145 -0.0344 -0.0876 0.0333]
;;    [-2.4474 -0.7506 -0.1368 -0.2740 -0.7809 -0.2277 -0.2657 -0.0326 0.0295 0.0583 -0.1133 -0.0667 -0.0137 -0.0216]
;;    [-2.2793 -0.4876 -0.1345 -0.6953 -0.3190 0.1026 -0.4163 0.0020 0.0665 0.0112 -0.0616 0.0028 0.0507 0.0263]])

;; (def input2
;;   [[-0.7305 0.5564 -0.5417 -0.0171 0.4279 -0.7495 -0.5497 -0.0333 -0.0028 -0.0190 0.1227 -0.0254 0.1335 0.1016]
;;    [-0.7807 0.4054 -0.8172 0.2009 0.0836 -0.5197 -0.1522 -0.0062 -0.0054 -0.0213 0.0597 -0.0792 0.1195 0.1772]
;;    [-0.8718 0.6182 -0.4989 0.4875 0.4732 -0.1966 -0.2404 -0.0329 0.0228 0.0440 0.0222 -0.0139 0.0403 0.1914]
;;    [-0.6907 0.4986 -0.6695 0.0289 0.0090 -0.4284 0.1816 -0.0968 -0.0169 0.0095 -0.0594 -0.0390 -0.0494 0.0853]
;;    [-0.9398 0.6239 -0.3956 0.1798 0.3957 -0.5937 0.2402 -0.1074 -0.0455 -0.0283 -0.0657 0.0421 -0.0115 0.0258]
;;    [-1.2308 0.3181 -0.8215 0.0576 -0.0726 -0.5681 0.0339 -0.1681 -0.0487 -0.0244 -0.0330 0.0741 0.0272 -0.0975]
;;    [-1.1388 0.4811 -0.5644 0.1446 0.7244 -0.1844 -0.0373 -0.1846 -0.0605 -0.0388 -0.0679 0.0320 0.0702 -0.1974]
;;    [-1.4316 0.3262 -0.7074 -0.1183 0.2150 -0.4969 -0.1673 -0.2153 -0.0056 0.0256 0.0074 0.1115 -0.0500 -0.1373]
;;    [-1.7622 0.3171 -0.6467 -0.0720 0.4119 -0.2780 -0.6461 -0.2665 -0.0272 0.0124 -0.0520 -0.0841 -0.1236 -0.0783]
;;    [-1.9957 0.3720 -0.6525 0.2030 0.6411 -0.7714 -0.3481 -0.2352 0.0035 0.0638 -0.0366 0.0294 -0.0217 0.0838]
;;    [-2.1891 0.3221 -0.5298 -0.2760 0.0910 -0.6650 -0.3382 -0.1906 -0.0257 0.0695 -0.1269 -0.0043 -0.0248 0.2205]
;;    [-2.3939 0.3412 -0.4470 -0.1995 0.5227 -0.4118 0.0978 -0.1936 -0.0453 0.0225 -0.1879 -0.0463 -0.0317 0.0451]
;;    [-2.5162 0.2041 -0.4021 -0.5052 0.4497 -0.5816 0.2333 -0.2078 -0.0352 -0.0338 -0.1146 0.0496 0.0157 0.0405]
;;    [-2.8003 0.2043 -0.6041 -0.6219 0.2305 -0.9714 -0.4082 -0.1889 -0.0295 0.0249 -0.0206 0.0640 0.0850 0.0383]
;;    [-3.0248 0.2146 -0.6203 -0.6379 0.4850 -0.3068 0.1174 -0.1535 -0.0431 0.0516 0.0008 0.0448 0.1639 0.1063]
;;    [-3.0841 0.1884 -0.2134 -0.2361 0.8250 -0.1241 0.3474 -0.1518 -0.0758 0.0728 0.0411 0.0286 0.1428 0.2241]
;;    [-3.1418 -0.0036 -0.3396 -0.6942 0.3764 -0.1859 0.3870 -0.0486 -0.0613 0.0546 -0.0047 0.0144 0.0756 0.1211]
;;    [-3.5009 -0.0657 -0.3807 -0.3882 0.4279 -0.3177 0.5777 -0.0500 -0.0176 0.0602 -0.0689 -0.0541 -0.0580 0.0076]
;;    [-3.0592 0.0352 -0.2635 -0.5855 0.7558 0.1683 0.6077 0.0425 0.0020 0.0290 -0.0369 -0.0955 0.0879 0.0510]
;;    [-3.3753 0.0810 0.0493 -0.6348 0.3648 -0.5913 0.2752 0.0933 0.0198 0.0804 0.0406 -0.0500 0.1028 0.0337]
;;    [-2.9921 -0.0668 -0.4095 -0.7555 -0.0695 0.3902 0.7935 0.0685 0.0715 0.0374 0.1044 -0.0206 -0.0236 0.0170]
;;    [-3.0680 0.0842 0.0942 -0.1002 0.5906 0.0852 0.6533 0.0175 0.0602 -0.0384 0.0228 0.0363 0.0945 0.0068]
;;    [-2.8704 0.3912 -0.0991 -0.3308 0.5399 -0.2879 0.5038 -0.0354 0.0337 -0.0551 -0.0358 0.0951 -0.0203 -0.0164]
;;    [-3.3486 0.1530 -0.2980 -0.7330 0.2416 0.2202 0.4543 -0.0643 -0.0455 -0.1409 -0.0596 0.0474 -0.0001 -0.0300]
;;    [-3.0287 0.0675 -0.4887 -0.6183 0.5805 0.2212 0.8109 0.0050 -0.0874 -0.0760 0.0736 0.0381 0.0619 -0.0174]
;;    [-3.3104 0.0184 -0.4154 -0.2546 0.8073 -0.1698 0.3498 0.2354 0.0690 0.1947 0.2881 0.0941 -0.0105 -0.0288]
;;    [-2.8646 0.0213 -0.4206 -0.2022 0.4474 0.2165 0.4692 0.7584 0.2152 0.3096 0.4972 -0.2384 -0.0841 -0.0412]
;;    [-2.2538 0.5211 0.6415 0.4996 0.7786 0.1701 0.4810 1.1354 0.2396 0.3345 0.6188 -0.4206 -0.0017 0.0359]
;;    [0.2351 0.8923 0.5310 1.4904 -0.5970 -0.3694 0.5394 1.1296 0.1427 0.1677 0.6099 -0.5284 -0.0788 0.0516]
;;    [0.8170 0.7808 0.7815 1.9928 -0.7734 0.1144 0.4943 0.8709 -0.0156 0.0114 0.3496 -0.4165 -0.0466 0.0424]
;;    [1.2478 0.6050 0.3479 2.1007 -1.4186 -0.1495 0.7204 0.3642 -0.0944 0.0685 0.1235 0.0059 0.0218 -0.0381]
;;    [1.5943 0.5869 0.7902 1.9425 -0.8932 -0.1727 0.6027 0.3196 -0.0718 0.0660 0.0042 0.1531 -0.0129 0.0142]
;;    [1.6676 0.5171 0.8693 2.1332 -0.5077 -0.1166 0.2949 0.4379 -0.0417 0.0793 0.0413 0.1873 0.0087 -0.0222]
;;    [2.2054 0.4656 0.8507 1.9974 -0.4635 0.0333 0.7779 0.5595 -0.0169 -0.0973 0.1048 0.0533 -0.1031 0.1018]
;;    [3.1317 0.4573 0.7143 2.2796 -0.6971 -0.2088 0.5218 0.6008 0.0619 -0.1989 0.0164 0.0265 -0.2287 0.1133]
;;    [3.6598 0.5323 0.3813 2.3936 -0.5322 -0.6423 0.9985 0.5099 0.0922 -0.2141 -0.0896 0.1106 -0.2865 -0.0767]
;;    [3.9445 0.7934 0.1094 2.0171 -0.3407 -0.9223 0.7508 0.3413 0.1233 -0.1482 -0.2661 0.1852 -0.2213 -0.1550]
;;    [4.3485 0.7588 0.0825 1.6808 -0.0885 -1.0422 0.2799 0.3069 0.1215 -0.1382 -0.2751 0.1460 -0.1645 -0.1937]
;;    [4.4937 0.9604 0.1226 1.3055 0.0070 -1.1152 0.1060 0.3334 0.0939 -0.1605 -0.1966 0.1439 -0.2202 -0.1403]
;;    [4.9196 1.0565 -0.3164 1.3737 0.0240 -1.3685 0.3522 0.3585 0.0900 -0.2185 -0.1178 0.0498 -0.2017 -0.0516]
;;    [5.3262 1.1140 -0.4937 1.1875 0.3226 -1.8601 0.0132 0.3018 0.0740 -0.2146 -0.1065 -0.0135 -0.0940 -0.0650]
;;    [5.7247 1.1318 -0.7019 1.1508 0.0025 -1.6784 0.0681 0.1578 0.0853 -0.1600 -0.1332 -0.0608 0.0196 -0.0630]
;;    [5.6001 1.2926 -0.7577 0.8846 -0.0496 -1.4303 -0.0769 -0.0025 0.0987 -0.1391 -0.0504 -0.1484 0.1508 0.0154]
;;    [5.5714 1.3937 -0.9845 0.8590 -0.0938 -1.4853 0.0824 -0.1653 0.1410 -0.0945 -0.1162 -0.1060 0.2691 -0.0245]
;;    [5.3904 1.4764 -1.0481 1.0813 -0.3713 -1.2026 0.0831 -0.1977 0.0973 -0.0124 -0.1883 -0.0111 0.2626 0.0277]
;;    [5.0031 1.7450 -1.0293 0.4713 -0.3665 -0.4464 -0.1344 -0.2487 0.0612 0.1087 -0.2511 0.0390 0.1546 0.1455]
;;    [4.8958 1.6033 -0.7974 0.1368 0.0312 -0.6368 0.1699 -0.2188 0.0454 0.1630 -0.3587 0.1032 -0.0186 0.1289]
;;    [4.5754 1.6362 -0.5662 0.0758 -0.1000 -0.9953 0.7663 -0.1168 -0.0178 0.1215 -0.3330 0.1045 -0.1423 0.0536]
;;    [4.5102 1.7580 -0.4646 -0.5146 0.0112 -1.0212 0.2775 -0.1862 -0.0254 0.0377 -0.2664 0.0026 -0.0787 -0.0928]
;;    [4.6121 1.5788 -0.5882 -0.8678 0.1660 -0.9659 0.0798 -0.1468 -0.0983 -0.0731 -0.1949 -0.0122 -0.0376 -0.1345]
;;    [3.9463 1.5052 -0.5979 -0.7233 -0.0886 -1.0450 0.0493 -0.1959 -0.1610 -0.0476 -0.0572 -0.0566 -0.0600 0.0374]
;;    [4.1232 1.2712 -0.8652 -0.7946 -0.1113 -1.1716 0.2080 -0.3627 -0.1080 0.1370 0.0315 -0.0730 0.0718 0.0817]
;;    [3.7752 1.1066 -0.5641 -0.8371 -0.1333 -1.2183 0.4006 -0.5433 -0.2258 0.2016 0.0150 -0.0121 0.4276 -0.0239]
;;    [2.8841 1.2378 0.0799 -0.6532 -0.1766 -0.5204 0.3128 -0.6455 -0.3714 0.4014 0.0781 -0.0065 0.5955 -0.2428]
;;    [1.8491 0.3928 -0.0623 -0.7190 -0.1166 0.7674 -0.1226 -0.4515 -0.5553 0.4542 0.0573 -0.0922 0.5920 -0.2116]
;;    [1.8587 -0.2291 0.8909 -0.4632 -0.1522 0.8132 -0.7443 -0.1899 -0.6814 0.2841 -0.0225 -0.0782 0.3244 -0.2176]
;;    [2.0305 -0.9365 1.3012 -0.6454 -0.6066 1.0747 -0.1288 -0.0261 -0.5363 0.1738 0.0447 -0.0907 -0.0168 -0.1625]
;;    [1.8441 -1.5045 0.8185 -0.8025 -0.3227 0.9482 -0.7719 0.0950 -0.2687 -0.0717 0.0359 -0.0956 -0.0068 -0.1055]
;;    [1.7259 -1.6511 0.8427 -0.3257 -0.4850 0.6157 -0.9215 0.0102 -0.1135 -0.1241 0.1233 -0.0322 -0.0293 -0.1588]
;;    [2.4857 -1.2151 0.7619 -0.4438 -0.6912 1.0085 -0.8753 0.0067 -0.0341 -0.1284 0.0886 -0.1180 0.0053 -0.0172]
;;    [1.7605 -1.6485 0.7090 -0.2081 -0.5832 0.8980 -0.8713 -0.0144 -0.0328 -0.1177 -0.0175 -0.1203 0.0286 -0.0067]
;;    [1.8601 -1.6765 0.2431 -0.4182 -0.8637 0.8335 -0.8832 -0.0480 -0.0377 -0.0325 0.0020 -0.0495 -0.0532 -0.0130]
;;    [1.9666 -1.5846 0.5136 -0.4260 -1.0004 0.8461 -0.9510 0.1249 0.0540 0.0356 0.0296 -0.0372 -0.0132 0.0536]
;;    [2.1426 -1.4357 0.6973 -0.3251 -0.7302 0.7683 -0.9005 0.0191 -0.0157 0.0705 0.0083 -0.0075 0.0803 0.0893]
;;    [2.2437 -1.4987 0.6598 -0.1068 -0.8359 0.8646 -0.5946 -0.0681 -0.0676 -0.0650 -0.0254 0.0912 0.1676 0.0827]
;;    [1.8168 -1.7981 0.5224 -0.5364 -0.9836 1.2259 -0.6149 -0.1524 -0.0604 -0.1109 -0.1057 0.0429 0.0253 -0.1522]
;;    [1.7890 -1.7413 0.2763 -0.4473 -0.4176 1.4553 -0.6806 -0.0810 -0.0151 -0.0690 -0.0877 0.1153 -0.0565 -0.0883]
;;    [1.6082 -1.6163 0.3344 -0.6831 -0.7250 0.5993 -1.6184 0.0157 0.0361 0.0211 -0.0017 0.1063 -0.1613 -0.0795]
;;    [1.9432 -1.6649 0.4087 -0.4718 -0.3889 0.8955 -0.5342 0.0090 0.0344 0.1252 -0.0085 -0.0397 -0.0617 -0.0267]
;;    [1.8180 -1.6557 0.5617 -0.5328 -0.4663 0.6992 -1.0856 -0.0599 -0.0126 0.1039 0.0757 -0.0014 0.0640 0.1559]
;;    [1.7293 -1.5494 0.7884 -0.5650 -0.7456 1.0967 -1.0803 -0.0395 0.0220 0.0757 0.0131 -0.0803 0.0362 0.0474]
;;    [1.4159 -1.7369 0.6639 -0.2582 -0.5535 0.8187 -0.5660 -0.1396 -0.0833 -0.0107 0.0286 -0.0029 0.1477 0.2100]
;;    [1.9465 -1.5143 0.7362 -0.5438 -0.7467 1.0167 -0.5568 -0.0481 -0.1085 -0.0890 -0.0656 -0.0516 0.0973 0.0464]
;;    [1.0112 -2.0897 0.5342 -0.4006 -0.4801 1.4779 -0.2975 0.1205 0.0296 -0.0261 -0.0333 -0.1132 0.0973 -0.1211]
;;    [1.6910 -1.9157 0.4081 -0.8219 -1.0401 1.2535 -0.9825 0.0088 0.0339 0.0307 0.0748 -0.1649 -0.0262 -0.1499]
;;    [2.1461 -1.3883 0.6977 -0.2854 -0.9731 1.1868 -0.9587 0.0472 0.0932 0.0453 0.0698 -0.0650 -0.1236 -0.1081]
;;    [1.4233 -1.6957 0.8079 -0.2272 -1.3246 1.0313 -0.9757 -0.2333 0.0381 0.0603 0.1765 0.0214 -0.0771 0.0123]
;;    [1.3812 -1.7339 0.5608 -0.3491 -0.6628 0.9709 -0.8417 -0.4617 0.0678 -0.0856 0.1702 0.0019 -0.0905 0.2556]
;;    [0.9068 -1.5522 0.7779 0.0922 -1.0880 0.9762 -0.9797 -0.5391 0.2962 -0.1334 0.1761 0.0006 -0.0545 0.3139]
;;    [0.0957 -1.1209 0.2850 0.4061 -1.0819 0.7618 0.3211 -0.7042 0.4967 -0.1565 0.1332 0.0330 -0.1123 0.2835]
;;    [-0.6296 -0.5210 0.2786 0.2759 -1.1118 0.8634 0.0126 -0.7460 0.4666 -0.2195 -0.0408 0.2894 -0.1252 0.2456]
;;    [-1.3714 0.2340 0.0281 0.2250 -0.4859 0.4656 0.0797 -0.5556 0.3515 -0.0779 -0.1485 0.4732 -0.1716 0.0098]
;;    [-2.0897 0.1032 -0.1910 -0.0210 0.0612 0.4981 0.3692 -0.3979 0.1975 0.0606 -0.0670 0.5539 -0.1546 0.0166]
;;    [-1.9523 0.3246 0.1302 -0.1877 0.6974 0.0862 0.1919 -0.2191 0.0306 0.1186 -0.0766 0.3094 -0.0473 -0.0428]
;;    [-2.3287 0.4212 0.5304 0.1474 1.0658 0.2803 0.0397 -0.1181 0.0056 0.0423 -0.0459 0.1353 0.0247 0.0288]
;;    [-2.3476 0.2282 0.2603 -0.2424 0.5588 0.3380 0.0305 -0.1574 -0.0628 -0.0258 0.0362 -0.0474 0.1035 0.0669]
;;    [-2.4823 0.1795 -0.0446 -0.2232 0.8068 0.4957 0.5936 -0.0981 -0.0580 -0.1049 -0.0459 -0.1001 -0.0144 0.0848]
;;    [-2.6623 0.1315 0.2890 0.1785 0.5897 0.4958 0.2493 -0.2366 -0.1003 -0.0257 -0.0060 -0.0785 -0.1412 -0.0799]
;;    [-2.6617 0.1794 -0.0083 -0.2926 0.5500 0.1292 0.3541 -0.1983 -0.0994 -0.0560 -0.0986 -0.1860 -0.1632 -0.1721]
;;    [-3.4408 -0.2730 0.1136 -0.2379 0.2945 -0.1846 -0.2492 -0.1023 -0.0772 -0.1022 -0.1470 -0.0787 -0.0515 0.0438]
;;    [-3.0847 -0.1150 -0.2369 -0.5078 0.0243 0.0202 -0.0177 -0.0183 -0.0134 -0.0489 0.0271 0.0965 0.0035 0.0610]
;;    [-2.9622 -0.1072 -0.1076 -0.4492 0.4591 0.2931 0.6543 0.0843 0.0826 0.0867 0.0471 0.1792 -0.0069 0.1141]
;;    [-2.9927 0.0293 -0.1424 -0.0515 0.9503 -0.0919 0.2073 0.0046 0.0658 0.0995 -0.0080 0.1358 -0.0435 0.0345]
;;    [-3.0652 0.0677 0.5000 -0.2306 0.7274 -0.1628 0.2089 0.0754 0.0796 0.0072 -0.0455 -0.0172 -0.0576 -0.1092]
;;    [-3.0100 0.1264 -0.0430 -0.6571 0.5693 0.0304 0.3775 0.0312 0.0024 -0.0694 -0.0744 -0.0865 0.1391 -0.0028]
;;    [-2.5768 0.2420 -0.1213 -0.3739 0.5637 -0.0561 0.0229 -0.0105 -0.0227 -0.1286 -0.0607 -0.1564 0.0485 0.0096]
;;    [-3.0810 -0.0458 -0.1786 -0.3521 0.5998 0.5500 0.2864 -0.0311 -0.0455 -0.0130 0.0693 -0.0667 -0.0347 0.0275]
;;    [-3.0823 0.0400 -0.0750 -0.6864 -0.0696 -0.1799 0.3024 -0.0528 -0.0460 0.0268 -0.0221 -0.0039 -0.0192 0.0719]
;;    [-2.9128 -0.0002 -0.1309 -0.1545 0.5524 -0.0811 0.3751 0.0628 0.0253 0.0281 0.0468 0.1354 -0.0811 -0.0725]
;;    [-2.9251 -0.0108 -0.0110 -0.5830 0.5679 0.1638 0.3381 0.0308 -0.0053 0.0371 0.1270 0.2775 0.0474 -0.1682]
;;    [-2.8458 0.1061 -0.0701 -0.1697 0.9582 -0.0273 -0.0938 -0.0272 0.0222 0.0031 0.0098 0.0506 0.0488 -0.1507]
;;    [-2.9618 -0.0394 0.0798 -0.0439 1.1151 0.0304 -0.3041 0.0118 0.0464 -0.0074 0.0459 -0.0732 -0.0212 -0.1237]
;;    [-3.0302 0.1249 -0.1611 -0.3751 0.5319 0.2296 -0.0572 0.0260 0.0362 0.0072 -0.0308 -0.2065 0.0429 0.1247]
;;    [-2.7739 0.2115 -0.0026 -0.2509 0.4153 -0.0707 -0.2989 -0.0331 -0.0105 -0.0681 -0.0178 -0.1200 0.0292 0.2448]
;;    [-2.8099 0.1618 0.0070 -0.2202 0.2758 0.2376 0.5270 -0.0058 0.0227 0.0059 -0.0329 0.0229 0.0268 0.1393]
;;    [-3.2374 -0.1103 -0.3447 -0.2106 0.6430 0.1723 0.6277 -0.0306 0.0233 -0.0675 -0.0966 0.0635 -0.0145 0.0961]
;;    [-2.8274 0.3994 0.0397 -0.5596 0.5326 0.2420 0.1759 -0.0529 -0.0047 -0.0413 -0.1230 0.0414 -0.0713 -0.0544]
;;    [-2.9182 0.2094 -0.3565 -0.5641 0.6046 -0.1455 0.3569 -0.0400 -0.0244 0.0069 -0.0994 -0.0312 -0.0467 -0.0260]
;;    [-3.2340 -0.0217 -0.1935 -0.6582 0.5021 0.0399 0.3904 -0.1129 -0.1073 -0.0303 -0.0291 -0.0163 -0.0219 0.0463]])

;; (def input3
;;   [[-2.6539 -0.0757 -0.4098 -0.6256 -0.3183 -0.3867 -0.0445 0.0496 0.0210 0.0850 0.1414 0.1496 0.0490 0.0528 ]
;;    [-2.2268 0.0585 -0.0768 -0.2945 0.3805 0.1042 -0.0158 0.0336 0.0324 0.0895 0.0784 0.1600 0.1080 0.0410 ]
;;    [-2.6194 -0.0379 -0.1515 -0.0839 0.0801 -0.3874 0.2052 0.0248 0.0156 -0.0222 -0.0150 0.0909 0.1570 0.0416 ]
;;    [-2.5030 0.0676 -0.0913 -0.5043 0.2827 0.1536 0.0357 -0.0791 -0.0325 -0.0762 -0.0695 -0.0593 0.0831 0.0230 ]
;;    [-2.3917 -0.0021 -0.5136 -0.5955 0.1849 0.3737 0.1377 0.0111 0.0064 -0.0195 -0.0692 -0.0155 0.0620 0.0520 ]
;;    [-2.7362 -0.1219 -0.2766 -0.3860 0.0316 0.1392 0.1332 -0.0133 -0.0383 0.0126 0.0230 -0.0433 -0.1614 -0.0328 ]
;;    [-2.4473 0.0890 -0.1563 -0.4889 0.1282 -0.0700 0.4166 -0.0301 0.0009 0.0774 0.0904 0.0199 -0.1853 -0.0288 ]
;;    [-2.5417 -0.1692 -0.2069 -0.4429 0.0947 -0.4313 -0.2679 0.0320 0.0413 0.0415 -0.0038 0.0478 -0.0768 -0.0683 ]
;;    [-2.6394 0.0261 -0.1613 -0.1151 0.2528 -0.2677 0.1941 -0.0599 -0.0282 -0.0436 -0.0488 -0.0719 -0.0832 -0.1074 ]
;;    [-2.4804 0.1160 -0.0668 -0.5920 0.2086 -0.1462 -0.0971 -0.0430 -0.0067 -0.0633 -0.1013 -0.1562 -0.0895 -0.0532 ]
;;    [-2.7777 -0.1946 -0.4442 -0.6586 -0.2880 -0.6283 -0.2057 0.0148 -0.0384 -0.0708 -0.0927 -0.0728 -0.0517 -0.0101 ]
;;    [-2.6873 -0.0923 -0.3821 -0.6777 -0.4159 -0.6983 -0.3339 -0.0222 -0.0554 -0.1069 0.0134 0.0166 0.0798 0.1266 ]
;;    [-2.4617 -0.0618 -0.3575 -0.5355 0.2008 -0.2500 0.2619 0.0188 -0.0103 -0.0399 0.0010 0.0826 0.1214 0.0624 ]
;;    [-2.7493 -0.2272 -0.6448 -0.5865 0.0471 0.0636 0.3023 -0.0093 -0.0350 0.0034 0.0666 0.1664 0.1923 0.0333 ]
;;    [-2.6526 -0.1786 -0.5123 -0.6993 -0.1065 -0.4022 -0.2120 -0.0205 0.0009 0.0414 0.0712 0.1030 0.0155 -0.0723 ]
;;    [-2.6383 -0.2090 -0.2875 -0.2630 0.5694 0.3396 0.0695 0.0215 0.0341 0.0066 0.0296 0.1052 0.0254 0.0806 ]
;;    [-2.6198 -0.0664 -0.3289 -0.3413 0.4548 -0.3103 0.0166 0.0654 0.0799 0.0063 0.0156 0.1444 0.0093 0.1305 ]
;;    [-2.6584 -0.1128 -0.7036 -0.6174 0.2923 0.1447 0.5909 0.0633 0.0713 0.0214 0.0199 0.0272 -0.0737 0.0423 ]
;;    [-2.3158 0.1727 -0.2728 -0.4441 0.7541 -0.2581 0.1796 0.0172 -0.0119 -0.0262 -0.0230 -0.0536 -0.0228 -0.1290 ]
;;    [-2.4738 0.0281 -0.2088 -0.1120 0.5558 -0.0552 0.1994 -0.0353 -0.0430 0.0113 -0.0703 -0.3175 -0.1434 -0.2204 ]
;;    [-2.6262 -0.1963 -0.7072 -0.7091 0.0549 -0.3244 -0.4325 -0.0127 -0.0546 -0.0085 -0.0394 -0.2657 -0.0339 -0.0475 ]
;;    [-2.6798 -0.1431 -0.4298 -0.8362 -0.9456 -0.5393 -0.2050 0.0153 0.0256 0.0318 0.0113 -0.0030 -0.0595 -0.0596 ]
;;    [-2.2762 -0.0145 -0.2050 -0.2791 0.1763 -0.1855 0.1441 0.0200 0.0745 0.1545 0.2180 0.2743 0.1725 0.1003 ]
;;    [-2.5721 0.0650 -0.3011 -0.2707 0.4800 -0.4223 -0.3871 -0.0211 0.0263 0.0978 0.2374 0.4020 0.1644 0.0278 ]
;;    [-2.5802 0.0719 0.0009 0.0982 0.7136 0.4794 0.1600 -0.0596 0.0143 0.0736 0.0813 0.0889 0.0317 -0.0268 ]
;;    [-2.6331 -0.0551 -0.0438 0.1620 0.7958 -0.0500 -0.0739 0.0115 -0.0266 -0.0167 0.0073 -0.0683 0.0006 0.1063 ]
;;    [-2.5437 0.1170 0.0343 -0.0888 0.4627 -0.2134 -0.1467 0.0241 -0.0298 -0.0801 -0.0478 -0.1967 -0.1986 0.0699 ]
;;    [-2.5327 -0.0905 -0.4012 -0.1406 0.2641 -0.0731 0.2976 0.0373 0.0035 -0.1006 -0.0696 -0.2380 -0.0087 0.1269 ]
;;    [-2.5100 -0.0595 -0.2209 0.0106 -0.0042 -0.5022 0.3236 0.0998 -0.0170 -0.0301 0.0882 -0.1622 -0.0953 0.1786 ]
;;    [-2.4635 0.0509 -0.4194 -0.2356 -0.1607 0.0512 0.3254 0.1848 0.0477 0.0780 0.1469 -0.0874 -0.0658 0.0599 ]
;;    [-2.0795 -0.0384 -0.1073 0.3998 -0.1357 -0.7522 0.7326 0.2401 0.0191 0.0446 0.1761 0.0289 0.0309 0.1189 ]
;;    [-1.8240 0.1376 -0.0680 0.3994 -0.1070 -0.2770 0.3928 0.1963 -0.0121 0.1169 0.2516 0.1467 0.0465 0.0090 ]
;;    [-1.6294 -0.0075 -0.1738 0.5736 0.1135 -0.1836 0.8845 0.2945 0.0053 0.1911 0.2104 0.0960 0.2483 0.0270 ]
;;    [-1.7071 -0.0249 0.1982 0.9356 0.4482 -0.0005 0.2945 0.8522 0.2055 0.2898 0.3430 -0.1175 0.0408 0.0183 ]
;;    [-0.6657 0.0694 0.7150 1.1835 0.0667 0.3510 0.9166 1.4244 0.2340 0.2016 0.2843 -0.1934 -0.1646 -0.1005 ]
;;    [1.9553 1.1265 0.9369 1.8095 -0.6713 -0.3401 0.4684 1.5830 0.1909 0.0434 0.2485 -0.2032 -0.4062 0.0090 ]
;;    [3.6614 0.5870 0.4649 1.5579 -0.2938 -0.8367 0.2953 1.2586 0.0862 -0.0707 0.1893 -0.0447 -0.4193 -0.1131 ]
;;    [4.0445 0.6710 0.5403 1.9909 -0.3875 -1.4377 0.6502 0.7806 -0.0813 -0.0881 0.0777 0.1229 -0.2959 -0.0931 ]
;;    [4.5826 0.7284 0.5597 2.0391 -0.2988 -1.1965 0.2605 0.6200 0.0155 -0.0409 0.0728 0.0630 -0.2173 -0.0877 ]
;;    [5.3976 0.6492 0.4488 1.9573 -0.0542 -1.6399 0.0205 0.6604 0.0295 -0.1428 -0.0496 0.0570 -0.1388 -0.1900 ]
;;    [6.0848 0.6753 0.3061 1.9386 -0.1453 -1.8220 0.1718 0.5340 0.0968 -0.2100 -0.1177 0.0615 -0.1771 -0.1138 ]
;;    [6.5953 0.8451 -0.0471 1.7930 -0.1793 -1.8187 -0.2557 0.3388 0.1719 -0.2338 -0.1667 0.0600 -0.0983 -0.0422 ]
;;    [6.6536 1.1143 -0.2422 1.5327 0.0712 -1.9923 -0.1706 0.2221 0.1659 -0.2253 -0.2584 0.1176 -0.0755 -0.0306 ]
;;    [6.8071 1.2892 -0.4463 1.3269 0.1373 -2.0464 -0.0193 0.1548 0.0864 -0.1281 -0.2960 0.0824 0.0182 0.0461 ]
;;    [7.0892 1.2829 -0.6209 0.8795 0.2845 -2.0854 -0.0993 0.1099 0.0175 -0.0783 -0.2918 0.0979 0.1202 0.0703 ]
;;    [7.1517 1.1928 -0.4983 0.6396 0.1260 -1.6811 -0.0608 -0.0029 -0.0171 -0.0101 -0.2914 0.1174 0.1770 0.0291 ]
;;    [7.0308 1.2501 -0.6076 0.4175 0.5666 -1.5742 0.2018 -0.1717 -0.0217 0.0326 -0.2354 0.0818 0.1197 0.0935 ]
;;    [6.8216 1.2204 -0.5036 0.1010 0.5831 -1.4168 -0.0242 -0.3070 -0.0084 0.0475 -0.2078 0.0147 0.1905 0.0294 ]
;;    [6.3960 1.1607 -0.4551 -0.0279 0.4647 -1.6192 0.3497 -0.2938 -0.0859 0.1242 -0.1058 -0.1290 0.2711 0.0117 ]
;;    [5.9342 1.1954 -0.3372 -0.1765 0.2506 -0.7060 0.0122 -0.1254 -0.1065 0.0656 -0.0548 -0.1854 0.2311 0.0850 ]
;;    [6.0055 0.8332 -0.0698 0.0272 0.0876 -0.5742 0.2423 -0.0368 -0.1018 0.0401 0.0348 -0.1413 0.1480 0.1027 ]
;;    [6.3900 0.8514 -0.3681 -0.2006 -0.1554 -0.7840 0.4543 -0.1074 0.0047 -0.0206 0.0741 -0.0157 0.0302 0.0537 ]
;;    [5.9839 0.8238 -0.2393 0.1580 -0.0387 -0.8404 0.6420 -0.5032 0.0526 -0.0192 0.1183 0.1682 0.0564 0.0566 ]
;;    [5.4082 1.2238 -0.3553 0.1285 0.2353 -0.4221 0.0809 -0.7201 -0.0213 0.0770 0.1564 0.2656 0.2729 -0.0967 ]
;;    [3.9801 0.9100 -0.1722 0.4543 0.7333 -0.4734 0.7118 -0.4638 -0.1430 0.0821 -0.0026 0.0145 0.3797 -0.2885 ]
;;    [3.7913 0.7017 -0.0169 0.4335 0.7863 0.3970 -0.0640 -0.1280 -0.3830 0.1806 -0.1009 -0.3066 0.3171 -0.2377 ]
;;    [4.4734 0.3699 0.0019 -0.0074 -0.2419 0.6487 -0.7282 0.1924 -0.4781 0.2090 -0.1062 -0.4858 0.2984 -0.2649 ]
;;    [4.5215 -0.4210 0.4608 -0.1453 -0.8099 0.6022 -0.3877 0.1293 -0.4881 0.1493 -0.0674 -0.3865 0.2440 -0.0720 ]
;;    [4.5767 -0.9189 0.6339 0.2129 -0.8976 0.9162 -0.4510 -0.0404 -0.4252 0.1161 -0.0881 -0.1797 0.1449 -0.2112 ]
;;    [4.3862 -1.0945 0.4134 -0.0135 -0.8181 1.4831 -0.5627 -0.1567 -0.2802 0.0904 -0.1154 -0.0144 0.1355 -0.3175 ]
;;    [4.3392 -1.4195 0.6060 -0.5140 -1.1365 0.9326 -1.6969 -0.2475 -0.2108 0.0505 -0.1192 -0.0144 0.0269 -0.1541 ]
;;    [3.8569 -1.5718 0.9268 -0.3587 -0.7622 1.2715 -1.3524 -0.3251 -0.1779 0.1365 -0.0531 -0.0419 0.0079 -0.1326 ]
;;    [3.6039 -1.7344 0.6299 -0.2105 -0.9975 1.1567 -0.8268 -0.3166 -0.0872 0.0635 0.0781 -0.0078 0.0285 0.0900 ]
;;    [3.1282 -1.8267 1.0840 -0.4306 -1.0972 1.4108 -1.6609 -0.1761 -0.0203 -0.0425 0.0325 -0.0204 -0.0284 0.0628 ]
;;    [3.1207 -1.7282 0.8451 -0.0876 -1.0079 1.0053 -1.0926 -0.2213 -0.0035 -0.0611 0.0296 -0.0361 0.0173 0.0443 ]
;;    [3.2178 -1.6763 0.6066 -0.2578 -0.8589 1.2055 -0.9052 -0.2288 -0.0415 -0.1576 0.0184 -0.0051 0.0168 0.0759 ]
;;    [2.4525 -1.8269 0.5629 -0.1490 -1.2972 1.3459 -0.9832 -0.1707 -0.0356 -0.0723 0.0278 -0.0085 0.1092 0.0440 ]
;;    [2.3184 -1.9850 0.4372 -0.3081 -0.9783 1.3245 -1.3360 -0.0516 0.0116 -0.0505 0.0596 -0.0191 -0.0317 0.0446 ]
;;    [2.7167 -1.7517 0.5684 0.0766 -0.9907 1.4919 -0.6571 0.1834 0.1070 -0.0005 0.0775 0.0427 -0.0792 0.0037 ]
;;    [2.8275 -1.6561 0.3513 -0.0728 -1.1077 0.9740 -0.8453 0.1241 0.0774 0.0488 0.0864 0.0117 -0.1114 0.0542 ]
;;    [3.1151 -1.4561 0.6034 0.1210 -1.0192 1.1252 -1.2103 0.0277 0.0058 0.0154 0.0004 -0.0310 -0.0941 -0.1591 ]
;;    [2.7396 -1.7457 0.6639 0.1019 -0.9054 0.9509 -0.7886 0.0248 0.0656 -0.0219 -0.0066 0.0007 0.0415 0.0416 ]
;;    [2.8993 -1.6780 0.4889 -0.0087 -1.2468 1.0329 -1.4808 -0.0823 0.1417 -0.1144 0.0155 0.0482 0.0700 0.2489 ]
;;    [3.0596 -1.2171 0.2989 -0.0410 -0.9906 1.2277 -0.5019 -0.2221 0.2856 -0.1137 0.0386 -0.0034 0.1017 0.1152 ]
;;    [2.5434 -1.0118 0.2137 0.2700 -0.7358 1.3366 -0.1093 -0.4288 0.3990 -0.0442 0.0593 0.1374 0.0513 0.2855 ]
;;    [1.8071 -0.6509 0.2331 0.1555 -1.1779 1.3075 -0.8983 -0.6730 0.4280 -0.0321 0.0780 0.0816 -0.0154 0.1430 ]
;;    [1.3815 0.0339 0.3008 0.1897 -0.4661 1.2492 0.1449 -0.6208 0.4234 -0.0400 0.0404 0.1090 -0.1808 0.2839 ]
;;    [0.2755 0.4002 0.0947 0.3894 -0.7173 1.1944 0.0860 -0.5356 0.3150 -0.0283 0.0811 0.2931 -0.1332 0.3954 ]
;;    [0.2050 0.5795 0.0830 0.3552 -0.4211 0.4889 0.8179 -0.3201 0.2188 0.0415 0.0333 0.2052 -0.2284 0.2371 ]
;;    [-0.2824 0.6512 0.2007 0.4781 0.2653 1.0217 0.7423 0.0239 0.1126 0.0733 -0.0910 0.3079 -0.2444 0.1356 ]
;;    [0.0598 1.0023 0.4551 0.3118 0.0684 0.1936 1.0025 -0.1088 0.0384 0.0889 -0.0940 0.1676 -0.1255 -0.1648 ]
;;    [0.4679 0.7517 0.2751 -0.0437 0.5773 0.1202 0.6717 -0.2006 -0.0472 0.0932 -0.0156 0.0539 -0.1480 -0.3442 ]
;;    [-0.7141 0.7211 0.4901 0.1459 0.2611 0.3119 0.0292 -0.3323 -0.0902 0.1051 0.0536 0.0201 0.0208 -0.3471 ]
;;    [-0.8987 0.5560 0.6494 0.4828 0.4384 0.2224 -0.4923 -0.3183 -0.0825 0.0368 0.0773 0.0381 0.1406 -0.0529 ]
;;    [-0.9185 0.6493 0.7936 0.3163 0.2386 0.2463 -0.1508 -0.1617 -0.1405 -0.0735 -0.0326 0.0550 0.0961 0.1638 ]
;;    [-1.0215 0.3750 0.3072 0.2575 0.7791 0.8559 0.4973 -0.2673 -0.1688 -0.1224 -0.1538 -0.0552 0.0058 0.1035 ]
;;    [-1.4614 0.1089 0.2937 0.0956 0.3657 0.4754 0.3536 -0.2677 -0.1418 -0.0528 -0.1094 -0.0650 0.0337 0.0251 ]
;;    [-1.9640 -0.0177 0.2873 -0.1761 0.0987 0.1370 -0.2270 -0.1360 -0.0107 0.1168 -0.0108 -0.0163 -0.1183 -0.2412 ]
;;    [-1.7858 0.1365 0.5393 -0.0141 0.2539 0.7744 0.3368 0.0163 0.0233 0.0348 -0.0194 0.0462 -0.1476 -0.2085 ]
;;    [-1.5391 0.3075 0.7683 0.2585 0.7536 0.1151 -0.7001 0.1124 0.0178 -0.0359 0.0575 0.1317 -0.0449 -0.1013 ]
;;    [-1.5923 0.0628 0.2274 -0.2185 0.2694 -0.2517 -0.4522 0.0121 -0.0292 -0.1202 0.0136 0.0596 -0.0995 -0.0180 ]
;;    [-1.4989 0.1080 0.2636 0.2134 0.7493 0.4254 -0.3388 -0.1559 -0.0779 -0.1976 -0.0817 -0.1471 0.0001 0.1088 ]
;;    [-1.7452 0.0902 0.1908 0.0766 0.5539 0.1218 0.0664 -0.2148 -0.0902 -0.0788 -0.0141 -0.0165 0.1169 0.2165 ]
;;    [-2.2420 -0.0955 -0.2011 -0.2977 -0.1244 -0.0712 -0.4155 -0.1559 -0.0116 0.0238 -0.0407 -0.1553 -0.0448 0.1813 ]
;;    [-2.2945 -0.2862 0.0657 -0.0336 0.6239 0.5810 0.6686 -0.0385 0.0012 0.0051 -0.0806 -0.1449 -0.0103 0.1190 ]
;;    [-2.0037 0.2383 0.4453 0.0652 -0.0624 -0.0280 0.2667 0.0351 0.0885 0.0564 -0.0064 -0.1010 -0.0557 0.0109 ]
;;    [-2.0567 -0.0705 -0.1067 -0.5080 -0.2016 0.0489 0.3205 0.0136 0.1203 -0.0105 -0.1099 -0.0609 -0.1286 -0.1777 ]
;;    [-2.1853 0.2394 0.1669 -0.0923 -0.2166 -0.0837 -0.1872 -0.0657 0.0100 -0.0857 -0.0070 0.1888 -0.0536 -0.0646 ]
;;    [-2.1358 0.3148 0.1522 -0.5044 0.3964 -0.0341 0.0072 -0.0782 0.0277 -0.0352 0.0704 0.1879 0.1156 0.1047 ]
;;    [-2.2930 0.0957 -0.1125 0.0284 0.5829 -0.2544 0.1005 -0.0427 -0.0417 -0.1239 -0.0278 0.1171 0.0707 0.1916 ]
;;    [-2.3937 0.1397 -0.1431 -0.2163 0.3381 0.7122 0.7004 -0.0282 -0.0479 -0.0669 -0.0367 -0.1185 0.0307 0.1067 ]
;;    [-2.2699 0.1184 -0.3048 -0.3752 0.3981 -0.1033 0.4241 0.0424 0.0007 0.0077 -0.0520 -0.0500 0.0294 -0.0948 ]
;;    [-2.2885 0.0639 -0.0862 -0.4860 -0.1039 0.0440 0.3790 -0.0268 -0.0425 -0.0335 0.0145 0.0268 -0.0483 -0.1123 ]
;;    [-2.1338 0.1370 -0.1024 -0.0966 0.5541 0.2266 -0.2129 -0.0314 -0.0132 0.0454 0.0557 -0.0348 0.0885 -0.0086 ]
;;    [-2.5957 -0.0820 -0.4119 -0.2829 0.3944 0.3057 0.4572 0.0154 0.0241 0.0472 0.0649 -0.0120 0.0210 0.0664 ]
;;    [-2.2734 0.1255 0.0852 -0.1981 -0.0249 0.2082 0.3420 -0.0008 0.0127 -0.0256 -0.0693 -0.1957 -0.1361 0.0801 ]
;;    [-2.1419 0.1903 0.0563 -0.1110 0.1256 0.1584 0.4333 0.0611 0.0673 0.0385 -0.1043 -0.1010 -0.0578 -0.0420 ]
;;    [-2.3647 0.0643 -0.4643 -0.5290 -0.2899 -0.3804 0.1994 -0.0600 0.0300 -0.0377 0.0119 0.1020 -0.0047 -0.0474 ]
;;    [-2.2447 0.2853 0.0551 -0.6389 0.0218 0.3112 0.3183 -0.0576 -0.0050 -0.0642 0.0547 0.1807 0.0403 -0.0012 ]
;;    [-2.5220 0.2280 -0.1025 0.1256 0.5368 0.1081 0.1626 -0.0269 -0.0170 -0.0204 0.0315 0.1519 0.0438 -0.0707 ]
;;    [-2.3514 0.0836 -0.4454 -0.1647 0.6159 0.1158 0.4459 -0.0733 -0.0681 -0.1141 -0.0204 0.0519 -0.0302 -0.0654 ]
;;    [-2.4460 0.0799 -0.3161 -0.6084 0.1725 -0.0636 -0.2179 -0.0320 -0.0391 -0.0486 -0.1252 -0.0938 0.0077 -0.0686 ]
;;    [-2.6494 0.0188 -0.4084 -0.3738 0.4634 0.2461 0.1814 -0.0479 -0.0461 0.0037 -0.0231 -0.0863 -0.0068 -0.1397 ]
;;    [-2.5331 0.0651 -0.3641 -0.3959 0.1441 0.0814 -0.0481 0.0110 0.0081 0.0484 0.0333 -0.0561 0.0072 0.0444 ]
;;    [-2.5476 -0.1394 -0.4029 -0.3862 0.1988 0.0094 -0.3374 0.0227 0.0146 0.0926 0.0157 -0.1035 0.0312 0.0155 ]
;;    [-2.4418 0.1993 -0.0771 -0.4359 0.0241 0.0906 0.2638 -0.0192 -0.0035 0.0360 -0.0117 0.0171 0.0003 0.1709 ]
;;    [-2.5814 0.0249 -0.0891 -0.2753 0.0059 0.3974 0.1028 -0.0509 -0.0192 -0.0017 -0.0420 0.0956 -0.0586 0.1190 ]
;;    [-2.6122 -0.0345 -0.3409 -0.5099 0.3262 -0.1110 0.5862 0.0176 -0.0371 -0.0643 -0.0248 0.1636 -0.0795 0.0868 ]
;;    [-2.7168 -0.1188 -0.2794 -0.5590 0.5256 -0.1828 0.0966 0.0965 -0.0498 0.0022 -0.0464 0.0218 -0.1594 0.0610 ]
;;    [-2.2861 0.0855 -0.3033 -0.4179 0.5824 -0.0166 0.7008 0.0672 -0.0659 0.0332 0.0033 -0.0086 0.1005 -0.0533 ]
;;    [-2.2619 -0.2842 -0.0967 -0.5535 -0.0131 -0.4467 0.3504 0.0196 -0.0340 0.0294 -0.0563 -0.1277 0.0117 -0.0209 ]
;;    [-2.5035 -0.2814 -0.2662 -0.4959 0.5528 0.5237 0.1927 -0.0308 0.0078 -0.0275 -0.0066 -0.1185 -0.0549 -0.0821 ]
;;    [-2.5100 -0.1053 -0.1510 -0.8014 -0.0979 -0.3947 0.2463 -0.0612 0.0751 -0.0452 0.0503 -0.0335 -0.0619 -0.0688 ]
;;    [-2.3163 0.0351 -0.4135 -0.3267 0.0323 -0.3173 0.3425 -0.0171 0.0333 -0.0818 0.0726 -0.0266 -0.1209 -0.0127 ]
;;    [-2.6616 -0.0672 -0.2492 -0.3867 0.0796 -0.3355 -0.0686 -0.0286 0.0088 -0.0211 0.0321 0.0424 0.1030 0.0340 ]
;;    [-2.5133 -0.1342 -0.6260 -0.3402 0.3310 -0.1106 0.2867 -0.0052 0.0131 -0.0045 0.0020 0.0022 0.0183 -0.0252 ]
;;    [-2.5546 0.0235 -0.1505 -0.6341 -0.0354 0.0170 0.4441 0.0409 0.0422 0.0097 0.0200 0.0285 -0.1173 -0.0320 ]
;;    [-2.3958 0.0552 -0.4851 -0.1929 0.1009 -0.4021 -0.0396 0.0033 0.0393 0.0589 0.0233 0.0385 -0.2125 -0.1213 ]
;;    [-2.5160 0.0493 -0.2710 -0.3605 0.3371 -0.7763 -0.0652 -0.0043 0.0046 -0.0027 0.0380 0.0981 -0.1961 -0.1044 ]])

;; (def noHMM2
;;   {
;;    :probs [1.0 0.0 0.0 0.0 0.0 0.0 0.0]
;;    :num_features 14
;;    :num_states 7
;;    :num_mixtures 1
;;    :iter 10
;;    :trans (matrix
;;            [[-10000000000.00000 -0.00000           -10000002194.87082  -10000011068.24602 -10000010259.57027 -10000048423.70020  -10000000000.00000]
;;             [-10000000003.02626 -0.05288           -3.02626           -10000000210.68538  -10000000210.68538 -10000000210.68538  -10000061011.29385]
;;             [-10000000002.67231 -9999999965.74436  -0.07445           -2.67231            -10000000210.33143 -10000000210.33143  -10000005465.30582]
;;             [-10000000002.74542 -10000000206.12704 -10000000045.59971 -0.06794            -2.74542           -10000000210.40454  -10000006623.40714]
;;             [-10000000002.05879 -10000000209.71791 -10000000079.47992 -10000000049.83497  -0.13719           -2.05879            -10000003288.28764]
;;             [-10000000003.08927 -10000000210.74839 -10000000210.64325 -10000000203.14013  10000000042.40795  -0.04835            -3.08927]
;;             [-10000000000.00000 -10000000000.00000 -10000000000.00000 -10000000000.00000  10000000000.00000   -10000000000.00000 -10000000000.00000]])
;;    :states [{}]})


;; (def r2f
;;   [{:timestamp 1364775093795,
;;     :sample-rate 16000,
;;     :features {:cepstrum [-2.685932 -0.14685376 -0.10603637 0.6888493 0.23634793 -0.119973555 0.326237 0.06468469 -0.16171919 0.23754014 0.012636418 -0.05173168 0.15621682],
;;                :delta    [-6.409731 -0.02404823 0.72415143 -0.009037606 0.5709318 0.49254954 0.28438917 0.71337396 0.09336708 0.11995133 0.014726092 -0.20367476 -0.12888099],
;;                :ddelta   [1.1289852 -0.2410826 0.20497891 -0.4774776 -0.2404577 -0.048361134 -0.27180448 0.5037336 0.29318973 0.12222341 0.15952513 0.0010782535 -0.32639548]}}
;;    {:timestamp   1364775093795,
;;     :sample-rate 16000,
;;     :features {:cepstrum [0.581116   -0.28574353 -0.20205253 0.66814876 -0.049902625 -0.3582214 0.20351477 -0.4392051 -0.109115295 -0.026687313 -0.14769174 0.007852076 0.392703],
;;                :delta    [-6.3534794  0.1430571   0.5638449  0.29271203 0.60233474 0.42366543 0.3812208 0.26354083 -0.03890529 0.08378659 -0.032770447 -0.17693575 0.12780316],
;;                :ddelta   [-1.1348408 -0.4310035   0.5835872 -0.5263013 0.061693892 0.25777987 0.08371 0.6943299 0.48543978 0.13596316 -0.0027991086 -0.27556285 -0.35985813]}}
;;    {:timestamp   1364775093795,
;;     :sample-rate 16000,
;;     :features {:cepstrum [2.1603017  -0.32496527 -0.29878855 0.43869412 -0.21290399 -0.42791677 0.117727764 -0.3239945 0.02428897 0.0305509 -0.03580158 0.014513534 0.26039916],
;;                :delta     [-5.27489   0.40695527 0.14056422 0.51726377 0.5092379 0.23476967 0.20067917 0.019044029 -0.3920727 -0.016011823 0.017525202 0.07188808 0.23097715],
;;                :ddelta    [-4.222164 -0.08678316 0.50114757 -0.29109195 0.44286308 0.47630727 0.25060657 0.83202255 0.2928438 0.35240626 0.13583592 -0.3851014 -0.44200048]}}])



;; ;;; YES HMM
;; (def yesA
;;   ;; log domain
;;   (matrix
;;    [[-10000000000.0       -0.0               -10000005829.84261 -10000010342.88199 -10000010336.41796 -10000033985.06764 -10000000000.0]
;;     [-10000000003.73791   -0.02410           -3.73791           -10000000095.06197 -10000000095.06197 -10000000095.06197 -10000024445.59936]
;;     [-10000000002.76137   -9999999846.96786  -0.06853           -2.76137           -10000000094.08543 -10000000094.08543 -10000011526.07542]
;;     [-10000000003.41763   -9999999885.26681  -9999999835.36647  -0.03819           -3.41763           -10000000040.59221 -10000009671.08051]
;;     [-10000000002.91145   -9999999875.90893  -9999999860.14654  -9999999833.05477  -0.05988           -2.91145           -10000003205.15881]
;;     [-10000000003.64795   -9999999886.66652  -9999999883.41716  -9999999865.46208  -9999999831.90563  -0.02700           -3.64795]
;;     [-10000000000.00000   -10000000000.00000 -10000000000.00000 -10000000000.0     -10000000000.0     -10000000000.0     -10000000000.0]]))
;; (def yesMM
;;   [[{:weight 0.00000 :mean [ 0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000]
;;      :sd (diag [0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000])}]
;;    [{:weight 1.00000 :mean [-2.41808  0.00970 -0.28852 -0.38376  0.26532  0.09810  0.15164 -0.01649 -0.00556  0.00724  0.00930  0.01216  0.01425  0.01017]
;;      :sd (diag [0.92173 0.07493 0.08322 0.14323 0.13188 0.12200 0.15046 0.02863 0.00627 0.00556 0.00773 0.00780 0.00646 0.00991])}]
;;    [{:weight 1.00000 :mean [ 2.77985  0.29170  0.70859  1.49642 -0.29487 -0.65209  0.18536  0.53990  0.04980  0.01819  0.06664 -0.02487 -0.12755 -0.04871]
;;      :sd (diag [6.01920  0.10914  0.23596  0.41431  0.17107  0.49547  0.16285  0.22413  0.01166  0.03259  0.06680  0.02226  0.01519  0.01329])}]
;;    [{:weight 1.00000 :mean [ 4.25997  0.11441  0.21787  0.02356 -0.19038 -0.32093 -0.37590 -0.12458 -0.03944  0.00841 -0.01486 -0.02460  0.09278  0.00060]
;;      :sd (diag [1.39589  0.98086  0.31231  0.26232  0.23350  1.05698  0.23738  0.03056  0.01554  0.01737  0.02575  0.01535  0.01250  0.01453])}]
;;    [{:weight 1.00000 :mean [ 0.31160  0.00889  0.15643  0.30229 -0.49070  0.45393  0.12475 -0.25398  0.06078 -0.01499 -0.00980  0.07949 -0.05125  0.04533]
;;      :sd (diag [1.94311 0.32805 0.06093 0.21266 0.37614 0.22867 0.21589 0.03857 0.02143 0.01168 0.00753 0.01791 0.01709 0.01984])}]
;;    [{:weight 1.00000 :mean [-2.41165 -0.09141 -0.22959 -0.36962  0.24838  0.05349  0.08217 -0.01910 -0.01022 -0.01855 -0.01339 -0.01482 -0.00294  0.00292]
;;      :sd (diag [0.52574  0.06199  0.08811  0.16488  0.11336  0.12230  0.13745  0.02724  0.00510  0.00411  0.00555  0.00995  0.00988  0.01141])}]
;;    [{:weight 0.00000 :mean [ 0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000]
;;      :sd (diag [0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000])}]])

;; (def yesAunlog
;;   (matrix (unlog-matrix yesA)))

;; (def yesHMM
;;   {:output "yes"
;;    :num_features 14
;;    :num_states 7
;;    :num_mixtures 1
;;    :iter 10
;;    :trans yesAunlog
;;    :mixture yesMM
;;    :prob (vec (take 7 (repeat (double 1/7))))})

;; ;;; NO hmm
;; (def noA
;;   ;;log domain
;;   (matrix [[-10000000000.00000 -0.00000           -10000002194.87082  -10000011068.24602 -10000010259.57027 -10000048423.70020  -10000000000.00000]
;;            [-10000000003.02626 -0.05288           -3.02626           -10000000210.68538  -10000000210.68538 -10000000210.68538  -10000061011.29385]
;;            [-10000000002.67231 -9999999965.74436  -0.07445           -2.67231            -10000000210.33143 -10000000210.33143  -10000005465.30582]
;;            [-10000000002.74542 -10000000206.12704 -10000000045.59971 -0.06794            -2.74542           -10000000210.40454  -10000006623.40714]
;;            [-10000000002.05879 -10000000209.71791 -10000000079.47992 -10000000049.83497  -0.13719           -2.05879            -10000003288.28764]
;;            [-10000000003.08927 -10000000210.74839 -10000000210.64325 -10000000203.14013  10000000042.40795  -0.04835            -3.08927]
;;            [-10000000000.00000 -10000000000.00000 -10000000000.00000 -10000000000.00000  10000000000.00000   -10000000000.00000 -10000000000.00000]]))

;; (def noAunlog (matrix (unlog-matrix noA)))

;; (def noMM ;; the mixture model for each state consists of a single gaussian
;;   [[{:weight 0.00000 :mean [0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000]
;;      :sd (diag [0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000])}]
;;    [{:weight 1.00000 :mean [-2.53457 -0.52503 -0.03429 -0.13210 0.01341 -0.05493 -0.18780 -0.04576 -0.01952 -0.00593 -0.01056 0.01584 0.01032 0.01530]
;;      :sd (diag [0.16152 0.04408 0.04349 0.05813 0.11706 0.08391 0.13401 0.00804 0.00281 0.00597 0.00876 0.01370 0.01054 0.01414])}]
;;    [{:weight 1.00000 :mean [ 0.81322 0.39103 0.16393 0.61980 0.40126 -0.05607 -0.14594 0.58560 0.09958 -0.03508 0.02324 0.00184 -0.03203 0.02947]
;;      :sd (diag [7.67641 0.38931 0.30903 0.38134 0.35050 0.14392 0.11679 0.22702 0.02651 0.04004 0.04765 0.04619 0.01666 0.01500])}]
;;    [{:weight 1.00000 :mean [ 5.25131 1.07706 -0.43141 -0.59588 -0.28788 -0.14505 0.60569 -0.13300 0.02562 0.05991 -0.04623 -0.05389 0.00647 0.04008]
;;      :sd (diag [0.57589 0.01593 0.17815 0.05941 0.12991 0.11279 0.12714 0.05008 0.00162 0.00907 0.01053 0.00522 0.00684 0.01050])}]
;;    [{:weight 1.00000 :mean [ 0.98755 0.54840 0.46072 0.02585 -0.20168 -0.03173 0.43830 -0.56677 -0.19778 0.00703 0.14499 0.15456 0.09357 -0.11081]
;;      :sd (diag [2.29717 0.35795 0.04368 0.26011 0.44733 0.29240 0.26898 0.05886 0.00874 0.00749 0.00990 0.02648 0.02438 0.02656])}]
;;    [{:weight 1.00000 :mean [-2.03884 -0.64122 0.06727 0.13439 0.05994 0.21659 -0.27696 -0.07143 -0.01426 -0.02588 -0.03053 -0.01634 -0.00490 -0.00279]
;;      :sd (diag [0.25059 0.03916 0.07630 0.11588 0.11216 0.10312 0.09185 0.01214 0.00509 0.00320 0.00881 0.00845 0.01059 0.00901])}]
;;    [{:weight 0.00000 :mean [ 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000]
;;      :sd (diag [0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000 0.00000  0.00000])}]])

;; (def noHMM
;;   {:output "no"
;;    :num_features 14
;;    :num_states 7
;;    :num_mixtures 1
;;    :iter 10
;;    :trans noAunlog
;;    :mixture noMM
;;    :prob (vec (take 7 (repeat (double 1/7))))})


;; (def example-solution
;;   ^{:doc "In the form of {:# {:# {:prev # :prob #]}
;;                          {timestamp {state {previous-best previous-prob}}}"}
;;   {:0 {:0 {:prev nil :prob 0.1428571428571429}
;;        :1 {:prev nil :prob 0.1428571428571429}
;;        :2 {:prev nil :prob 0.1428571428571429}
;;        :3 {:prev nil :prob 0.1428571428571429}
;;        :4 {:prev nil :prob 0.1428571428571429}
;;        :5 {:prev nil :prob 0.1428571428571429}
;;        :6 {:prev nil :prob 0.1428571428571429}}
;;    :1 {:0 {:prev 0 :prob 1.0}
;;        :1 {:prev 0 :prob 1.0}
;;        :2 {:prev 0 :prob 1.0}
;;        :3 {:prev 0 :prob 1.0}
;;        :4 {:prev 0 :prob 1.0}
;;        :5 {:prev 0 :prob 1.0}
;;        :6 {:prev 0 :prob 1.0}}
;;    :2 {:0 {:prev 1 :prob 0.5}
;;        :1 {:prev 1 :prob 0.2}
;;        :2 {:prev 1 :prob 0.3}
;;        :3 {:prev 3 :prob 0.6}
;;        :4 {:prev 4 :prob 0.2}
;;        :5 {:prev 2 :prob 0.001}
;;        :6 {:prev 1 :prob 0.1}}})
